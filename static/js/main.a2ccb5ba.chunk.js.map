{"version":3,"sources":["Screens/TrainingScreen.js","Screens/MultOptScreen.js","App.js","index.js"],"names":["TrainingScreen","randomNumberGenerator","n","Number","Math","floor","random","useState","randomNum","setRandomNum","answer","setAnswer","randomColor","color","setColor","KanjiNt","data","Kanji","DATA","ans","kunyomi","onyomi","meaning","Container","className","Paper","Card","CardContent","style","backgroundColor","Typography","fontSize","key","kanji","Button","size","variant","onClick","e","MultOptKanji","wrongData1","wrongData2","wrongData3","question","index","setIndex","allAnswers","handleNext","array","currentIndex","length","randomIndex","temporarychecked","shuffle","showMultipleOptions","val","type","id","checked","onChange","real","alert","textAlign","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2ccb5ba.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport data from \"../storage/data.json\";\nimport \"./Screens.css\";\nimport randomColor from \"randomcolor\";\n\nimport {\n  Button,\n  Paper,\n  Card,\n  CardContent,\n  Container,\n  Typography,\n} from \"@material-ui/core\";\n\nexport default function TrainingScreen() {\n  const randomNumberGenerator = (n) => {\n    return Number(Math.floor(Math.random() * n));\n  };\n  const [randomNum, setRandomNum] = useState(randomNumberGenerator(850));\n  const [answer, setAnswer] = useState(\"\");\n  const [color, setColor] = useState(randomColor());\n  const KanjiNt = data[0].Kanji.DATA[randomNum];\n  const ans = [\n    KanjiNt.kunyomi + \" / \" + KanjiNt.onyomi + \" / \" + KanjiNt.meaning,\n  ];\n\n  const handleNext = () => {\n    setRandomNum(randomNumberGenerator(850));\n    setAnswer();\n    setColor(randomColor());\n  };\n\n  const handleShow = () => {\n    setAnswer(ans);\n  };\n\n  const showKanji = () => {\n    return (\n      <Container className=\"Container\">\n        <Container>\n          <br />\n          <br />\n        </Container>\n        <Container>\n          <Paper>\n            <Card>\n              <CardContent\n                className=\"KanjiCard\"\n                style={{ backgroundColor: color }}\n              >\n                <Typography\n                  style={{ fontSize: \"6rem\" }}\n                  className=\"Kanji\"\n                  key={data.Kanji}\n                >\n                  {KanjiNt.kanji}\n                </Typography>\n                <Typography>{answer}</Typography>\n              </CardContent>\n            </Card>\n          </Paper>\n          <br />\n          <Button\n            size=\"large\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={(e) => handleNext(e)}\n          >\n            {\" \"}\n            Next{\" \"}\n          </Button>\n          <Button\n            size=\"large\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            onClick={(e) => handleShow(e)}\n          >\n            {\" \"}\n            Show{\" \"}\n          </Button>\n        </Container>\n      </Container>\n    );\n  };\n\n  return <Container className=\"Main\">{showKanji()}</Container>;\n}\n","import React, { useState } from \"react\";\nimport randomColor from \"randomcolor\";\nimport {\n  Paper,\n  Card,\n  CardContent,\n  Container,\n  Typography,\n} from \"@material-ui/core\";\nimport data from \"../storage/data.json\";\nimport \"./Screens.css\";\n\nconst randomNumberGenerator = (n = 850) => {\n  return Number(Math.floor(Math.random() * n));\n};\n\nconst MultOptKanji = () => {\n  const [randomNum, setRandomNum] = useState(randomNumberGenerator());\n\n  const KanjiNt = data[0].Kanji.DATA[randomNum];\n  const wrongData1 = data[0].Kanji.DATA[randomNumberGenerator()];\n  const wrongData2 = data[0].Kanji.DATA[randomNumberGenerator()];\n  const wrongData3 = data[0].Kanji.DATA[randomNumberGenerator()];\n\n  const question = [KanjiNt.kanji];\n\n  const answer = [\n    KanjiNt.kunyomi + \" / \" + KanjiNt.onyomi + \" / \" + KanjiNt.meaning,\n  ];\n\n  const [color, setColor] = useState(randomColor());\n  const [index, setIndex] = useState([0, 1, 2, 3, 4]);\n\n  const allAnswers = [\n    answer,\n    wrongData1.kunyomi + \" / \" + wrongData1.onyomi + \" / \" + wrongData1.meaning,\n    wrongData2.kunyomi + \" / \" + wrongData2.onyomi + \" / \" + wrongData2.meaning,\n    wrongData3.kunyomi + \" / \" + wrongData3.onyomi + \" / \" + wrongData3.meaning,\n  ];\n\n  const shuffle = (array) => {\n    let currentIndex = array.length - 1;\n\n    while (currentIndex !== 0) {\n      const randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      const temporarychecked = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporarychecked;\n    }\n\n    return array;\n  };\n\n  const handleNext = () => {\n    setRandomNum(randomNumberGenerator());\n    setColor(randomColor());\n    shuffle(index);\n    setIndex(index);\n  };\n\n  const handleCheck = (obs, real) => {\n    if (obs !== real) {\n      alert(real);\n    } else {\n      handleNext();\n    }\n  };\n\n  const showKanji = () => {\n    return (\n      <Container className=\"Container\">\n        <Container>\n          <Paper>\n            <Card>\n              <CardContent style={{ backgroundColor: color }}>\n                <Typography\n                  style={{ fontSize: \"6rem\" }}\n                  className=\"Kanji\"\n                  key={data.Kanji}\n                >\n                  {question}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Paper>\n        </Container>\n      </Container>\n    );\n  };\n\n  const showMultipleOptions = (val) => {\n    return (\n      <Typography>\n        {allAnswers[index[val]]}{\" \"}\n        <input\n          type=\"checkbox\"\n          id=\"checkbox1\"\n          checked={false}\n          onChange={() => handleCheck(allAnswers[index[val]], answer)}\n        />\n      </Typography>\n    );\n  };\n\n  const optionsGrid = () => {\n    return (\n      <Container>\n        <Paper>\n          <Card>\n            <CardContent\n              style={{ backgroundColor: { color }, textAlign: \"end\" }}\n            >\n              {showMultipleOptions(0)}\n              {showMultipleOptions(1)}\n              {showMultipleOptions(2)}\n              {showMultipleOptions(3)}\n            </CardContent>\n          </Card>\n        </Paper>\n      </Container>\n    );\n  };\n\n  return (\n    <Container className=\"Main\">\n      {showKanji()}\n      <br />\n\n      {optionsGrid()}\n    </Container>\n  );\n};\n\nexport default MultOptKanji;\n","import React from \"react\";\nimport \"./App.css\";\nimport TrainingScreen from \"./Screens/TrainingScreen\";\nimport MultOptKanji from \"./Screens/MultOptScreen\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <MultOptKanji />\n      <hr />\n      <TrainingScreen />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}